<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.TicketMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.entity.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="custom_id" jdbcType="INTEGER" property="customId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="piao_num" jdbcType="VARCHAR" property="piaoNum" />
    <result column="piao_type" jdbcType="VARCHAR" property="piaoType" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, custom_id, store_id, create_time, status, end_time, in_time, piao_num, piao_type, 
    out_time
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.entity.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from piao
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from piao
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from piao
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.entity.TicketExample">
    delete from piao
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.entity.Ticket">
    insert into piao (id, custom_id, store_id, 
      create_time, status, end_time, 
      in_time, piao_num, piao_type, 
      out_time)
    values (#{id,jdbcType=INTEGER}, #{customId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP}, 
      #{inTime,jdbcType=TIMESTAMP}, #{piaoNum,jdbcType=VARCHAR}, #{piaoType,jdbcType=VARCHAR}, 
      #{outTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.entity.Ticket">
    insert into piao
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customId != null">
        custom_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="piaoNum != null">
        piao_num,
      </if>
      <if test="piaoType != null">
        piao_type,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customId != null">
        #{customId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="piaoNum != null">
        #{piaoNum,jdbcType=VARCHAR},
      </if>
      <if test="piaoType != null">
        #{piaoType,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.entity.TicketExample" resultType="java.lang.Long">
    select count(*) from piao
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update piao
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customId != null">
        custom_id = #{record.customId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inTime != null">
        in_time = #{record.inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.piaoNum != null">
        piao_num = #{record.piaoNum,jdbcType=VARCHAR},
      </if>
      <if test="record.piaoType != null">
        piao_type = #{record.piaoType,jdbcType=VARCHAR},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update piao
    set id = #{record.id,jdbcType=INTEGER},
      custom_id = #{record.customId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      in_time = #{record.inTime,jdbcType=TIMESTAMP},
      piao_num = #{record.piaoNum,jdbcType=VARCHAR},
      piao_type = #{record.piaoType,jdbcType=VARCHAR},
      out_time = #{record.outTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entity.Ticket">
    update piao
    <set>
      <if test="customId != null">
        custom_id = #{customId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="piaoNum != null">
        piao_num = #{piaoNum,jdbcType=VARCHAR},
      </if>
      <if test="piaoType != null">
        piao_type = #{piaoType,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.entity.Ticket">
    update piao
    set custom_id = #{customId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      in_time = #{inTime,jdbcType=TIMESTAMP},
      piao_num = #{piaoNum,jdbcType=VARCHAR},
      piao_type = #{piaoType,jdbcType=VARCHAR},
      out_time = #{outTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>